/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define QWERTY 0
#define SYM    1
#define SYM_2  2
#define FNC    3
#define FNC_2  4

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;

    tapping-term-ms = <250>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            layers = <0 1 2 3>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <21 22>;
            layers = <0 1 2 3>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <22 23>;
            layers = <0 1 2 3>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <23 24>;
            layers = <0 1 2 3>;
        };

        to_default {
            bindings = <&to 0>;
            key-positions = <0 9>;
            layers = <1 2 3 4>;
        };

        alt_quotes {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <5 6>;
            layers = <0>;
        };

        numpad {
            bindings = <&to 3>;
            key-positions = <1 10 12>;
            layers = <0>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <3 2>;
            layers = <0 2 3 1>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <6 7>;
            layers = <0 1 2 3>;
        };

        settings {
            bindings = <&to 4>;
            key-positions = <0 1 2>;
            layers = <0>;
        };

        and {
            bindings = <&and>;
            key-positions = <10 31>;
            layers = <0>;
        };

        the {
            bindings = <&the>;
            key-positions = <13 31>;
            layers = <0>;
        };

        improve_prompt {
            bindings = <&llm_prompt>;
            key-positions = <31 18>;
            layers = <0>;
        };

        alt_ret {
            bindings = <&kp RET>;
            key-positions = <15 16>;
            layers = <0 1 2 3>;
        };

        capsword {
            bindings = <&caps_word>;
            key-positions = <29 28>;
            layers = <0>;
        };
    };

    macros {
        the: the {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp E>;
            label = "THE";
        };

        and: and {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp N &kp D>;
            label = "AND";
        };

        llm_prompt: llm_prompt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(RET) &kp MINUS &kp MINUS &kp MINUS &kp SPACE &kp I &kp M &kp P &kp R &kp O &kp V &kp E &kp SPACE &kp T &kp H &kp E &kp SPACE &kp W &kp R &kp I &kp T &kp I &kp N &kp G &kp RETURN>;
            label = "LLM_PROMPT";
        };
    };

    behaviors {
        backspace_mod: backspace_mod {
            compatible = "zmk,behavior-tap-dance";
            label = "BACKSPACE_MOD";
            #binding-cells = <0>;
            bindings = <&lt 2 BACKSPACE>, <&kp BACKSPACE>;
        };

        german_ae: german_ae {
            compatible = "zmk,behavior-mod-morph";
            label = "GERMAN_AE";
            bindings = <&kp A>, <&kp RA(A)>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        german_ue: german_ue {
            compatible = "zmk,behavior-mod-morph";
            label = "GERMAN_UE";
            bindings = <&kp U>, <&kp RA(U)>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        german_oe: german_oe {
            compatible = "zmk,behavior-mod-morph";
            label = "GERMAN_OE";
            bindings = <&kp O>, <&kp RA(O)>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        german_ss: german_ss {
            compatible = "zmk,behavior-mod-morph";
            label = "GERMAN_SS";
            bindings = <&kp S>, <&kp RA(S)>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_base {
            bindings = <
&kp Q           &kp W           &kp F        &kp P             &kp B            &kp J      &kp L              &kp U        &kp Y            &mt UNDER MINUS
&mt LEFT_GUI A  &mt LEFT_ALT R  &mt LCTRL S  &mt LEFT_SHIFT T  &kp G            &kp M      &mt RIGHT_SHIFT N  &mt RCTRL E  &mt RIGHT_ALT I  &mt LEFT_GUI O
&lt 2 Z         &kp X           &kp C        &kp D             &kp V            &kp SLASH  &mt RET K          &kp H        &mt COLON COMMA  &lt 2 DOT
                                &kp A             &lt 1 SPACE       &kp BACKSPACE    &lt 3 TAB  &lt 1 RET &kp B
            >;
        };

        symbol {
            bindings = <
&kp HASH            &kp AT              &kp LESS_THAN         &kp GREATER_THAN       &kp TILDE           &kp MINUS  &kp LEFT_BRACE                    &kp RIGHT_BRACE              &kp GRAVE                   &kp COLON
&mt LEFT_GUI CARET  &mt LEFT_ALT EQUAL  &mt LCTRL UNDERSCORE  &mt LEFT_SHIFT DOLLAR  &kp ASTERISK        &kp PLUS   &mt RIGHT_SHIFT LEFT_PARENTHESIS  &mt RCTRL RIGHT_PARENTHESIS  &mt RIGHT_ALT LEFT_BRACKET  &mt RIGHT_GUI RIGHT_BRACKET
&kp BACKSLASH       &kp PIPE            &kp PRCNT             &trans                 &kp SINGLE_QUOTE    &kp DQT    &kp EXCL                          &kp AMPS                     &kp UNDER                   &kp SLASH
                                        &trans                &trans                 &kp DELETE          &to 1      &trans &trans
            >;
        };

        number-and-fn {
            bindings = <
&kp N1             &kp N2       &kp N3         &kp N4             &kp N5        &kp N6  &kp N7                &kp N8             &kp N9                   &kp N0
&mt LEFT_GUI EXCL  &mt LALT AT  &mt LCTRL SQT  &mt LEFT_SHIFT F4  &trans        &trans  &mt RIGHT_SHIFT HOME  &mt RCTRL PAGE_UP  &mt RIGHT_ALT PAGE_DOWN  &mt RIGHT_GUI END
&kp F1             &kp F2       &kp F3         &kp F4             &kp F5        &kp F6  &kp F7                &kp F8             &kp F11                  &kp F12
                                &trans         &trans             &kp DELETE    &to 2   &trans &trans

            >;
        };

        numpad_arrow {
            bindings = <
&to 0   &trans    &kp UP_ARROW  &trans     &trans         &kp FSLH      &kp N7  &kp N8  &kp N9  &kp MINUS
&trans  &kp LEFT  &kp DOWN      &kp RIGHT  &trans         &kp ASTERISK  &kp N4  &kp N5  &kp N6  &kp PLUS
&trans  &trans    &trans        &trans     &trans         &kp N0        &kp N1  &kp N2  &kp N3  &kp ENTER
                   &trans       &kp SPACE  &key_repeat    &to 3         &trans &trans
            >;
        };

        settings {
            bindings = <
&to 0  &none  &none       &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &none  &none  &kp A
&none  &none  &none       &none         &none           &none         &none         &none  &none  &none
&none  &none  &bt BT_CLR  &none         &tog 0          &to 0         &none         &none  &none  &none
             &none             &none         &none           &none         &none &none   
            >;
        };
    };
};
